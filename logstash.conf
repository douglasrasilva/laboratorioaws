input {
    file {
        path => ["DIRETORIO"]
        start_position => beginning
        exclude => "*.gz"
        sincedb_path => "/dev/null"
    }
}

filter {
    csv {
        columns => [
          "CIP",
          "RemoteLog",
          "RemoteUser",
          "Time",
          "CSUristem",
          "HttpStatus",
          "ResponseSize",
          "CSReferer",
          "UserAgent",
          "CsBytes",
          "ScBytes",
          "timetakenSegundos",
          "timetakenMicroSegundos"
        ]
        separator => "|"
    }

#### Cria um campo mytimestamp extraindo da mensagem os campos para converter a data de [dd/MMM/yyyy:HH:mm:ss -0300] para dd/MMM/yyyy:HH:mm:ss -0300

grok {
    match => [
      "message",
      "(?<mytimestamp>%{MONTHDAY}/%{MONTH}/%{YEAR}:%{HOUR}:%{MINUTE}:%{SECOND} %{ISO8601_TIMEZONE})"
    ]
  }
  date {
    match => ["mytimestamp", "dd/MMM/YYYY:HH:mm:ss Z"]
    target =>"@timestamp"
  }

#### Converte os campos de timetaken e bytes para Inteiro

  mutate {
    convert => { "timetakenSegundos" => "integer" }
    convert => { "timetakenMicroSegundos" => "integer" }
    convert => { "CsBytes" => "integer" }
    convert => { "ScBytes" => "integer" }
  }

#### Pega o primeiro IP do campo CIP e cria um novo campo com esse IP

  mutate {
    split => ["CIP", ","]
    add_field => { "Client_IP" => "%{[CIP][0]}" }
  }


}

output {
        elasticsearch {
        hosts => ["http://SERVIDOR:9200"]
        index => "httpd_access-%{+yyyy.MM.dd}"
        }
}
